syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_stock.proto";
import "rpc_create_product.proto";
import "rpc_get_product.proto";
import "rpc_delete_product.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/ymanshur/synasishouse/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Inventory API";
    version: "1.0";
  };
};

service Inventory {
  rpc CheckStock (StockRequest) returns (StockResponse) {
    option (google.api.http) = {
      post: "/api/check_stock"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to check a product stock";
      summary: "Check stock";
    };
  }
  rpc ReserveStock (StockRequest) returns (StockResponse) {
    option (google.api.http) = {
      post: "/api/reserve_stock"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to reserve a product stock";
      summary: "Reserve stock";
    };
  }
  rpc ReleaseStock (StockRequest) returns (StockResponse) {
    option (google.api.http) = {
      post: "/api/release_stock"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to release a product stock";
      summary: "Release stock";
    };
  }
  rpc CreateProduct (CreateProductRequest) returns (ProductResponse) {
    option (google.api.http) = {
      post: "/api/create_product"
      body: "*"
    };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to create a product";
      summary: "Create product";
    };
  }
  rpc GetProduct (GetProductRequest) returns (ProductResponse) {
    option (google.api.http) = {
      get: "/api/get_product"
    };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to get a product";
      summary: "Get product";
    };
  }
  rpc DeleteProduct (DeleteProductRequest) returns (DeleteProductResponse) {
    option (google.api.http) = {
      delete: "/api/delete_product"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to delete a product";
      summary: "Delete product";
    };
  }
}
