syntax = "proto3";

package synasishouse.api;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "rpc_stock.proto";
import "rpc_product.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/ymanshur/synasishouse/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Inventory API";
    version: "1.0";
  };
};

service Inventory {
  rpc CheckStock (CreateStockRequest) returns (StockResponse) {
    option (google.api.http) = {
      post: "/api/stocks"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to checkout a product stock";
      summary: "Check stock";
    };
  }
  rpc ReserveStock (CreateStockRequest) returns (StockResponse) {
    option (google.api.http) = {
      post: "/api/stocks/reserve"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to reserve a product stock";
      summary: "Reserve stock";
    };
  }
  rpc ReleaseStock (CreateStockRequest) returns (StockResponse) {
    option (google.api.http) = {
      post: "/api/stocks/release"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to release a product stock";
      summary: "Release stock";
    };
  }
  rpc CreateProduct (CreateProductRequest) returns (ProductResponse) {
    option (google.api.http) = {
      post: "/api/products"
      body: "*"
    };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to create a product";
      summary: "Create product";
    };
  }
  rpc GetProduct (GetProductRequest) returns (ProductResponse) {
    option (google.api.http) = {
      get: "/api/products/{id}"
    };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to get a product";
      summary: "Get product";
    };
  }
  rpc UpdateProduct (UpdateProductRequest) returns (ProductResponse) {
    option (google.api.http) = {
      patch: "/api/products/{id}"
    };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to update a product";
      summary: "Update product";
    };
  }
  rpc DeleteProduct (GetProductRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/products/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to delete a product";
      summary: "Delete product";
    };
  }
}
