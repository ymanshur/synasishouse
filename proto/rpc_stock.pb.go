// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.12.4
// source: rpc_stock.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductCode   string                 `protobuf:"bytes,1,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"`
	Amount        int32                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockRequest) Reset() {
	*x = StockRequest{}
	mi := &file_rpc_stock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockRequest) ProtoMessage() {}

func (x *StockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_stock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockRequest.ProtoReflect.Descriptor instead.
func (*StockRequest) Descriptor() ([]byte, []int) {
	return file_rpc_stock_proto_rawDescGZIP(), []int{0}
}

func (x *StockRequest) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *StockRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CreateStockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stocks        []*StockRequest        `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStockRequest) Reset() {
	*x = CreateStockRequest{}
	mi := &file_rpc_stock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStockRequest) ProtoMessage() {}

func (x *CreateStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_stock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStockRequest.ProtoReflect.Descriptor instead.
func (*CreateStockRequest) Descriptor() ([]byte, []int) {
	return file_rpc_stock_proto_rawDescGZIP(), []int{1}
}

func (x *CreateStockRequest) GetStocks() []*StockRequest {
	if x != nil {
		return x.Stocks
	}
	return nil
}

type StockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAvailable   bool                   `protobuf:"varint,1,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockResponse) Reset() {
	*x = StockResponse{}
	mi := &file_rpc_stock_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockResponse) ProtoMessage() {}

func (x *StockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_stock_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockResponse.ProtoReflect.Descriptor instead.
func (*StockResponse) Descriptor() ([]byte, []int) {
	return file_rpc_stock_proto_rawDescGZIP(), []int{2}
}

func (x *StockResponse) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

var File_rpc_stock_proto protoreflect.FileDescriptor

const file_rpc_stock_proto_rawDesc = "" +
	"\n" +
	"\x0frpc_stock.proto\x12\x10synasishouse.api\"I\n" +
	"\fStockRequest\x12!\n" +
	"\fproduct_code\x18\x01 \x01(\tR\vproductCode\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x05R\x06amount\"L\n" +
	"\x12CreateStockRequest\x126\n" +
	"\x06stocks\x18\x01 \x03(\v2\x1e.synasishouse.api.StockRequestR\x06stocks\"2\n" +
	"\rStockResponse\x12!\n" +
	"\fis_available\x18\x01 \x01(\bR\visAvailableB%Z#github.com/ymanshur/synasishouse/pbb\x06proto3"

var (
	file_rpc_stock_proto_rawDescOnce sync.Once
	file_rpc_stock_proto_rawDescData []byte
)

func file_rpc_stock_proto_rawDescGZIP() []byte {
	file_rpc_stock_proto_rawDescOnce.Do(func() {
		file_rpc_stock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_stock_proto_rawDesc), len(file_rpc_stock_proto_rawDesc)))
	})
	return file_rpc_stock_proto_rawDescData
}

var file_rpc_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rpc_stock_proto_goTypes = []any{
	(*StockRequest)(nil),       // 0: synasishouse.api.StockRequest
	(*CreateStockRequest)(nil), // 1: synasishouse.api.CreateStockRequest
	(*StockResponse)(nil),      // 2: synasishouse.api.StockResponse
}
var file_rpc_stock_proto_depIdxs = []int32{
	0, // 0: synasishouse.api.CreateStockRequest.stocks:type_name -> synasishouse.api.StockRequest
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_stock_proto_init() }
func file_rpc_stock_proto_init() {
	if File_rpc_stock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_stock_proto_rawDesc), len(file_rpc_stock_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_stock_proto_goTypes,
		DependencyIndexes: file_rpc_stock_proto_depIdxs,
		MessageInfos:      file_rpc_stock_proto_msgTypes,
	}.Build()
	File_rpc_stock_proto = out.File
	file_rpc_stock_proto_goTypes = nil
	file_rpc_stock_proto_depIdxs = nil
}
